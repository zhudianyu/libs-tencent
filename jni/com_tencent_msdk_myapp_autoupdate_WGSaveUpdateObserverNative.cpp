/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "CommonFiles/WGCommon.h"
#include "CommonFiles/WGPlatform.h"
#include "com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative.h"

JNIEXPORT void JNICALL Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnCheckNeedUpdateInfo(
		JNIEnv * env, jclass, jlong jNewApkSize, jstring jNewFeature, jlong jPatchSize, jint jStatus,
		jstring jUpdateDownloadUrl, jint jUpdateMethod) {
	LOGI("Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnCheckNeedUpdateInfo%s", "");
	long cNewApkSize = (long)jNewApkSize;
	jboolean jIsCopy;
	std::string cNewFeature;
	if (jNewFeature == NULL) {
	    cNewFeature.assign("");
	} else {
	    char const * pNewFeature  = env->GetStringUTFChars(jNewFeature, &jIsCopy);
	    cNewFeature.assign(pNewFeature);
	    env->ReleaseStringUTFChars(jNewFeature, pNewFeature);
	}

	long cPatchSize = (long)jPatchSize;
	int cStatus = (int)jStatus;

	std::string cUpdateDownloadUrl;
	if (jUpdateDownloadUrl == NULL) {
	    cUpdateDownloadUrl.assign("");
	} else {
	    char const * pUpdateDownloadUrl  = env->GetStringUTFChars(jUpdateDownloadUrl, &jIsCopy);
	    cUpdateDownloadUrl.assign(pUpdateDownloadUrl);
	    env->ReleaseStringUTFChars(jUpdateDownloadUrl, pUpdateDownloadUrl);
	}
	int cUpdateMethod = (int)jUpdateMethod;

	if (WGPlatform::GetInstance()->GetSaveUpdateObserver() != NULL) {
		WGPlatform::GetInstance()->GetSaveUpdateObserver()->OnCheckNeedUpdateInfo(cNewApkSize, cNewFeature,
				cPatchSize, cStatus, cUpdateDownloadUrl, cUpdateMethod);
	}
}

JNIEXPORT void JNICALL Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadAppProgressChanged(
		JNIEnv * env, jclass, jlong jReceiveDataLen, jlong jTotalDataLen) {
	LOGI("Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadAppProgressChanged%s", "");
	long cReceiveDataLen = (long)jReceiveDataLen;
	long cTotalDataLen = (long)jTotalDataLen;

	if (WGPlatform::GetInstance()->GetSaveUpdateObserver() != NULL) {
		WGPlatform::GetInstance()->GetSaveUpdateObserver()->OnDownloadAppProgressChanged(cReceiveDataLen, cTotalDataLen);
	}
}

JNIEXPORT void JNICALL Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadAppStateChanged(
		JNIEnv * env, jclass, jint jState, jint jErrorCode , jstring jErrorMsg) {
	LOGI("Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadAppStateChanged%s", "");
	int cState= (int)jState;
	int cErrorCode = (int)jErrorCode ;
	jboolean jIsCopy;
	std::string cErrorMsg;
	if (jErrorMsg== NULL) {
	    cErrorMsg.assign("");
	} else {
	    char const * pErrorMsg= env->GetStringUTFChars(jErrorMsg, &jIsCopy);
	    cErrorMsg.assign(pErrorMsg);
	    env->ReleaseStringUTFChars(jErrorMsg, pErrorMsg);
	}

	if (WGPlatform::GetInstance()->GetSaveUpdateObserver() != NULL) {
		WGPlatform::GetInstance()->GetSaveUpdateObserver()->OnDownloadAppStateChanged(cState, cErrorCode, cErrorMsg);
	}
}

JNIEXPORT void JNICALL Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadYYBProgressChanged(
		JNIEnv * env, jclass, jstring jUrl, jlong jReceiveDataLen, jlong jTotalDataLen) {
	LOGI("Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadYYBProgressChanged%s", "");
	jboolean jIsCopy;
	std::string cUrl;
	if (jUrl== NULL) {
	    cUrl.assign("");
	} else {
	    char const * pUrl= env->GetStringUTFChars(jUrl, &jIsCopy);
	    cUrl.assign(pUrl);
	    env->ReleaseStringUTFChars(jUrl, pUrl);
	}
	long cReceiveDataLen = (long)jReceiveDataLen;
	long cTotalDataLen = (long)jTotalDataLen;

	if (WGPlatform::GetInstance()->GetSaveUpdateObserver() != NULL) {
		WGPlatform::GetInstance()->GetSaveUpdateObserver()->OnDownloadYYBProgressChanged(cUrl, cReceiveDataLen, cTotalDataLen);
	}
}

JNIEXPORT void JNICALL Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadYYBStateChanged(
		JNIEnv * env, jclass, jstring jUrl, jint jState, jint jErrorCode, jstring jErrorMsg) {
	LOGI("Java_com_tencent_msdk_myapp_autoupdate_WGSaveUpdateObserverNative_OnDownloadYYBStateChanged %s", "");
	jboolean jIsCopy;
	std::string cUrl;
	if (jUrl== NULL) {
	    cUrl.assign("");
	} else {
	    char const * pUrl= env->GetStringUTFChars(jUrl, &jIsCopy);
	    cUrl.assign(pUrl);
	    env->ReleaseStringUTFChars(jUrl, pUrl);
	}

	int cState= (int)jState;
	int cErrorCode= (int)jErrorCode;

	std::string cErrorMsg;
	if (jErrorMsg== NULL) {
	    cErrorMsg.assign("");
	} else {
	    char const * pErrorMsg= env->GetStringUTFChars(jErrorMsg, &jIsCopy);
	    cErrorMsg.assign(pErrorMsg);
	    env->ReleaseStringUTFChars(jErrorMsg, pErrorMsg);
	}

	if (WGPlatform::GetInstance()->GetSaveUpdateObserver() != NULL) {
		WGPlatform::GetInstance()->GetSaveUpdateObserver()->OnDownloadYYBStateChanged(cUrl, cState, cErrorCode, cErrorMsg);
	}
}
